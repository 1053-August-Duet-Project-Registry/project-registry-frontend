trigger:
- Dev

pool:
  vmImage: ubuntu-latest

variables:
- group: project-registry-sonarcloud
- group: project-registry-discord
- name: microservice
  value: frontend
- name: coveragePath
  value: src/main/java/com/revature/registry/aspect,src/main/java/com/revature/registry/controller,src/main/java/com/revature/registry/model,src/main/java/com/revature/registry/repository,src/main/java/com/revature/registry/service
- name: workDir
  value: p3-frontend/
- name: maven
  value: false
- name: angular
  value: true


stages:
- stage: build
  jobs:
  - job: analyze

    steps:
    - checkout: self

    - task: SonarCloudPrepare@1
      enabled: ${{ variables.angular }}
      inputs:
        SonarCloud: 'SonarCloud'
        organization: ${{ sonar-org-name }}
        scannerMode: 'Other'
        extraProperties: |
          # Additional properties that will be passed to the scanner, 
          # Put one key=value per line, example:
          # sonar.exclusions=**/*.bin
          sonar.projectKey=${{ sonar-project-key-prefix }}${{ microservice }}
          sonar.projectName=${{ sonar-project-name-prefix }}${{ microservice }}
      displayName: Prepare Analysis for ${{ microservice }} --> Task
          
    - task: Npm@1
      enabled: ${{ variables.angular }}
      inputs:
        command: 'install'
        workingDir: './${{ workDir }}'
      displayName: Install dependencies for ${{ microservice }} --> Task

    - task: SonarCloudAnalyze@1
      enabled: ${{ variables.angular }}
      displayName: Analyze ${{ microservice }} --> Task

    - task: variables.AngularCLI@1
      enabled: ${{ variables.angular }}
      inputs:
        command: 'build'
        project: './${{ workDir }}'
        prod: false
        DisableAnalytics: false
      displayName: Build ${{ microservice }} --> Task

    - task: SonarCloudPrepare@1
      enabled: ${{ maven }}
      inputs:
        SonarCloud: 'SonarCloud'
        organization: ${{ sonar-org-name }}
        scannerMode: 'Other'
        extraProperties: |
          # Additional properties that will be passed to the scanner, 
          # Put one key=value per line, example:
          # sonar.exclusions=**/*.bin
          sonar.projectKey=${{ sonar-project-key-prefix }}${{ microservice }}
          sonar.projectName=${{ sonar-project-name-prefix }}${{ microservice }}
      displayName: Prepare Analysis for ${{ microservice }} --> Task

    - task: 'Maven@3'
      enabled: ${{ maven }}
      inputs:
        mavenPomFile: ./pom.xml
        publishJUnitresults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        codeCoverageToolOption: 'JaCoCo'
        codeCoverageClassFilesDirectories: $(Agent.BuildDirectory)/${{ coveragePath }}
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        mavenVersionOption: 'Default'
        mavenOptions: '-Xmx3072m'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: true
        sqMavenPluginVersionChoice: 'latest'
      displayName: Build/Analyze ${{ microservice }} --> Task

    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'
      displayName: Publish Analysis of ${{ microservice }} --> Task

    - task: 'ado-discord-webhook@1'
      condition: always()
      inputs:
        channelId: ${{ discord-channel-id }}
        webhookKey: ${{ discord-webhook-key }}
        name: 'Project Registry'
        messageType: 'content'
        content: | 
              __*${{ microservice }} Analysis Report*__
              ``` Build Number = $(Build.BuildNumber)
              Report = https://sonarcloud.io/dashboard?branch=$(Build.SourceBranch)&id=${{ sonar-project-key-prefix }}${{ microservice }}
              Repo = $(Build.Repository.Name)
              Branch = $(Build.SourceBranch)
              Trigger = $(Build.Reason)
              Status = $(Agent.JobStatus)```
      displayName: Notification --> Task

    displayName: Analyze --> Job
  displayName: Build --> Stage