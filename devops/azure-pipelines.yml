trigger:
- branch-dev
- main
pr:
- branch-dev
- main

pool:
  vmImage: ubuntu-latest

variables:
- group: project-registry-sonarcloud
- group: project-registry-discord
- name: microservice
  value: "frontend"
- name: coveragePath
  value: "./p3-frontend/**"
- name: workDir
  value: "./p3-frontend/"
- name: maven
  value: false
- name: angular
  value: true


stages:
- stage: build
  jobs:
  - job: analyze

    steps:
    - checkout: self

    - task: SonarCloudPrepare@1
      enabled: ${{ variables.angular }}
      inputs:
        SonarCloud: 'SonarCloud'
        organization: $(sonarOrgName)
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: $(sonarFrontendKey)
        cliSources: '.'
      displayName: Prepare Analysis for ${{ variables.microservice }} --> Task
          
    - task: Npm@1
      enabled: ${{ variables.angular }}
      inputs:
        command: 'install'
        workingDir: './${{ variables.workDir }}'
      displayName: Install dependencies for ${{ variables.microservice }} --> Task

    - task: AngularCLI@1
      enabled: ${{ variables.angular }}
      inputs:
        command: 'build'
        project: './${{ variables.workDir }}'
        prod: false
        DisableAnalytics: true
      displayName: Build ${{ variables.microservice }} --> Task

    - task: SonarCloudAnalyze@1
      enabled: ${{ variables.angular }}
      displayName: Analyze ${{ variables.microservice }} --> Task

    - task: SonarCloudPrepare@1
      enabled: ${{ variables.maven }}
      inputs:
        SonarCloud: 'SonarCloud'
        organization: $(sonarOrgName)
        scannerMode: 'Other'
        extraProperties: 
          sonar.projectKey=$(sonarFrontendKey)
          sonar.projectName=$(sonarFrontendName)
      displayName: Prepare Analysis for ${{ variables.microservice }} --> Task

    - task: 'Maven@3'
      enabled: ${{ variables.maven }}
      inputs:
        mavenPomFile: ./pom.xml
        publishJUnitresults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        codeCoverageToolOption: 'JaCoCo'
        codeCoverageClassFilesDirectories: $(Agent.BuildDirectory)/${{ variables.coveragePath }}
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        mavenVersionOption: 'Default'
        mavenOptions: '-Xmx3072m'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: true
        sqMavenPluginVersionChoice: 'latest'
      displayName: Build/Analyze ${{ variables.microservice }} --> Task

    - task: SonarCloudPublish@1
      condition: always()
      inputs:
        pollingTimeoutSec: '300'
      displayName: Publish Analysis of ${{ variables.microservice }} --> Task

    - task: 'ado-discord-webhook@1'
      condition: always()
      inputs:
        channelId: $(discord-channel-id)
        webhookKey: $(discord-webhook-key)
        name: 'Team 1 Project 3 Pipeline'
        messageType: 'content'
        content: | 
              __*Team 1 P3*__  Analysis Report
              ``` Build Number = $(Build.BuildNumber)
              Report = https://sonarcloud.io/dashboard?branch=$(Build.SourceBranch)&id=$( variables.sonar-frontend-key )
              Repo = $(Build.Repository.Name)
              Branch = $(Build.SourceBranch)
              Trigger = $(Build.Reason)
              Status = $(Agent.JobStatus)```
      displayName: Notification --> Task

    displayName: Analyze --> Job

  displayName: Build --> Stage

